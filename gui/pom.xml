<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.6.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.orange.onap</groupId>
	<artifactId>onap-tpce-manager</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>onap-tpce-manager</name>
	<description>Demo project for Spring Boot</description>
	<repositories>
		<repository>
			<id>releases</id>
			<name>ONAP - Release Repository</name>
			<url>https://nexus.onap.org/content/repositories/releases</url>
		</repository>
  		<repository>
    		<id>gitlab-maven</id>
    		<url>https://gitlab.com/api/v4/projects/16909344/packages/maven</url>
  		</repository>
	</repositories>
	<distributionManagement>
  		<repository>
   	 		<id>gitlab-maven</id>
   	 		<url>https://gitlab.com/api/v4/projects/16909344/packages/maven</url>
  		</repository>
  		<snapshotRepository>
    		<id>gitlab-maven</id>
    		<url>https://gitlab.com/api/v4/projects/16909344/packages/maven</url>
  		</snapshotRepository>
	</distributionManagement>


	<scm>
        <connection>scm:git:https://gitlab.com/Orange-OpenSource/lfn/odl/tpce_gui.git</connection>
        <developerConnection>scm:git:https://gitlab.com/Orange-OpenSource/lfn/odl/tpce_gui.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.onap.portal.sdk</groupId>
			<artifactId>epsdk-fw</artifactId>
			<version>2.5.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.powermock</groupId>
					<artifactId>powermock-api-mockito</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!--
		for authentication , you need spring security ,
		onap portal framework for cookie encryption,
		for authorization Cadi framework-->
		<dependency>
			<groupId>org.onap.aaf.authz</groupId>
			<artifactId>aaf-cadi-core</artifactId>
			<version>2.1.13</version>
		</dependency>
		<dependency>
			<groupId>org.onap.aaf.authz</groupId>
			<artifactId>aaf-cadi-aaf</artifactId>
			<version>2.1.13</version>
		</dependency>
		<dependency>
			<groupId>org.onap.aaf.authz</groupId>
			<artifactId>aaf-cadi-client</artifactId>
			<version>2.1.13</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.opendaylight.yangtools/yang-parser-impl -->
		<dependency>
			<groupId>org.opendaylight.yangtools</groupId>
			<artifactId>yang-parser-impl</artifactId>
			<version>3.0.5</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.opendaylight.yangtools</groupId>
			<artifactId>yang-parser-api</artifactId>
			<version>3.0.5</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.opendaylight.yangtools</groupId>
			<artifactId>yang-model-api</artifactId>
			<version>3.0.5</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>org.opendaylight.yangtools</groupId>
			<artifactId>yang-data-impl</artifactId>
			<version>3.0.5</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>org.opendaylight.yangtools</groupId>
			<artifactId>yang-data-api</artifactId>
			<version>3.0.5</version>
			<type>jar</type>
		</dependency>





		<dependency>
			<groupId>org.opendaylight.yangtools</groupId>
			<artifactId>yang-data-codec-xml</artifactId>
			<version>3.0.5</version>
		</dependency>

		<dependency>
			<groupId>org.opendaylight.yangtools</groupId>
			<artifactId>odlext-model-api</artifactId>
			<version>3.0.5</version>
		</dependency>

		<dependency>
			<groupId>org.opendaylight.yangtools</groupId>
			<artifactId>yang-parser-rfc7950</artifactId>
			<version>3.0.5</version>
		</dependency>

		<!-- to convert from NormalizedNode to JSON -->
		<dependency>
			<groupId>org.opendaylight.jsonrpc</groupId>
			<artifactId>jsonrpc-impl</artifactId>
			<version>1.7.0</version>
		</dependency>

		<dependency>
			<groupId>org.opendaylight.mdsal</groupId>
			<artifactId>mdsal-dom-api</artifactId>
			<version>4.0.6</version>
		</dependency>

		<dependency>
			<groupId>org.opendaylight.jsonrpc.bus</groupId>
			<artifactId>bus-jsonrpc</artifactId>
			<version>1.7.0</version>
		</dependency>


	</dependencies>

	<!--profile for skip copying resources while in development env-->
	<profiles>
		<profile>
			<id>skipCopyingRec-dev</id>
			<activation>
				<property>
					<name>skip.copy</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<skip.copy.rec>true</skip.copy.rec>
			</properties>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<!-- Use the latest released version:
        		https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ -->
				<version>1.7.6</version>
                <configuration>
                    <workingDirectory>src/main/frontend</workingDirectory>
                </configuration>

				<executions>
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<skip>${skip.copy.rec}</skip>
							<!-- See https://nodejs.org/en/download/ for latest node and npm (lts) versions -->
							<nodeVersion>v10.16.0</nodeVersion>
							<npmVersion>6.9.0</npmVersion>
						</configuration>
					</execution>

					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<!-- Optional configuration which provides for running any npm command -->
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>

                   <!-- <execution>
                        <id>npm audit</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        &lt;!&ndash; Optional configuration which provides for running any npm command &ndash;&gt;
                        <configuration>
                            <arguments>audit -f fix</arguments>
                        </configuration>
                    </execution>-->

					<execution>
						<id>npm run build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run build --prod</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>Copy frontend build to target</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<skip>${skip.copy.rec}</skip>
							<outputDirectory>${project.build.directory}/classes/resources</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/frontend/dist/frontend</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>


		</plugins>
	</build>
</project>
